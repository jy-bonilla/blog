{"ast":null,"code":"var _jsxFileName = \"/Users/yesidbonilla/Desktop/FullStack/Portfolio/blog/client/src/components/SinglePost/SinglePost.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:3000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [path]);\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      // window.location.reload()\n      setUpdateMode(false);\n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: PF + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"singlePostTitleInput\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-regular fa-pen-to-square\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-regular fa-trash-can\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePosDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n_c = SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["axios","useContext","useEffect","useState","Link","useLocation","Context","jsxDEV","_jsxDEV","SinglePost","_s","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","error","handleUpdate","put","className","children","photo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","autoFocus","onClick","to","Date","createdAt","toDateString","_c","$RefreshReg$"],"sources":["/Users/yesidbonilla/Desktop/FullStack/Portfolio/blog/client/src/components/SinglePost/SinglePost.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\n\nexport default function SinglePost() {\n    const location = useLocation();\n    const path = (location.pathname.split(\"/\")[2]);\n    const [post, setPost] = useState({});\n    const PF = \"http://localhost:3000/images/\";\n    const { user } = useContext(Context);\n    const [title, setTitle] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [updateMode, setUpdateMode] = useState(false);\n\n    useEffect(() => {\n        const getPost = async () => {\n            const res = await axios.get(\"/posts/\" + path);\n            setPost(res.data)\n            setTitle(res.data.title)\n            setDesc(res.data.desc)\n        };\n        getPost();\n    }, [path]);\n\n    const handleDelete = async () => {\n        try {\n            await axios.delete(`/posts/${post._id}`, {\n                data: { username: user.username },\n            });\n            window.location.replace(\"/\")\n        } catch (error) { }\n    };\n\n    const handleUpdate = async () => {\n        try {\n            await axios.put(`/posts/${post._id}`, {\n                username: user.username, title, desc\n            });\n            // window.location.reload()\n            setUpdateMode(false)\n        } catch (error) { }\n    };\n\n    return (\n        <div className=\"singlePost\">\n            <div className=\"singlePostWrapper\">\n                {post.photo && (\n                    <img className=\"singlePostImg\" src={PF + post.photo} alt=\"\" />\n                )}{\n                    updateMode ? <input type=\"text\" value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                        className=\"singlePostTitleInput\" autoFocus /> : (\n                        <h1 className=\"singlePostTitle\">\n                            {title}\n                            {post.username === user?.username && (\n                                <div className=\"singlePostEdit\">\n                                    <i className=\"singlePostIcon fa-regular fa-pen-to-square\" onClick={() => setUpdateMode(true)}></i>\n                                    <i className=\"singlePostIcon fa-regular fa-trash-can\" onClick={handleDelete}></i>\n                                </div>\n                            )}\n                        </h1>\n                    )\n                }\n                <div className=\"singlePostInfo\">\n                    <span className=\"singlePostAuthor\">\n                        Author:\n                        <Link to={`/?user=${post.username}`} className=\"link\">\n                            <b>{post.username}</b>\n                        </Link>\n                    </span>\n                    <span className=\"singlePosDate\">{new Date(post.createdAt).toDateString()}</span>\n                </div>\n                {updateMode ? (<textarea className=\"singlePostDescInput\" value={desc}\n                    onChange={(e) => setDesc(e.target.value)} />) : (\n                    <p className=\"singlePostDesc\">\n                        {desc}\n                    </p>\n                )}\n                {updateMode &&\n                    <button className=\"singlePostButton\" onClick={handleUpdate}>Update</button>\n                }\n            </div>\n        </div >\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}